import Foundation 
import CryptoSwift 
func selection(_ array: [Int]) -> [Int] {
    
    var copy = array
    
    for index1 in 0..<copy.count {
        var minIndex = index1
        for index2 in index1..<copy.count { 
            if copy[minIndex] > copy[index2] {
                minIndex = index2
            }
        }
        copy.swapAt(index1, minIndex)
    }
    
    return copy
}

func buble(_ array: [Int]) {
    var copy = array
    var count = copy.count
    for index1 in 0..<(count - 1) {
        for index2 in 0..<(count - 1) {
            if copy[index2] > copy[index2 + 1] {
                copy.swapAt(index2, index2 + 1)
            }
        }
        count -= 1
    }
}
func quickSort(_ array: [Int]) -> [Int] {
    var copy = array
    for index in (0..<copy.count).reversed() {
        for index1 in 0...index {
            if index1 != 0, copy[index1] > copy[index] {
                if (index - 1 == index1) {   
                    copy.swapAt(index, index - 1)
                } else {
                    copy.swapAt(index, index - 1)
                    copy.swapAt(index, index1)
                }
                break
            }
            if index1 == 0, copy[index1] > copy[index] {
                copy.swapAt(index, index1)
                break
            }
            
        }
    }
    
    for index3 in 0..<copy.count - 1 {
        if copy[index3] > copy[index3 + 1] {
            copy = quickSort(copy)
        }
    }
    return copy 
}
let nummbers = [306,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,3,941,33,320,379,727,64,721,704,983,568,441,110,367,805,768,279,699,1079,139,871,816,589,904,445,364,133,461,26,1068,225,72,1048,263,216,854,407,527,1078,943,81,771,568,850,448,3,440,803,846,959,694,1005,332,427,543,284,925,1080,985,907,479,832,231,657,374,333,728,313,1062,643,292,755,481,810,695,977,1021,59,178,845,1057,487,944,10,244,490,883,157,168,797,869,390,496,322,317,258,900,358,960,37]

let bubleDate = Date()
var i = 0
while i != 10 {
    buble(nummbers)
    i += 1
}
print(-(bubleDate.timeIntervalSinceNow/10))


let selectionDate = Date()
i = 0
while i != 10 {
    selection(nummbers)
    i += 1
}
print(-(selectionDate.timeIntervalSinceNow/10))

let quickSortDate = Date()
i = 0
while i != 10 {
    quickSort(nummbers)
    i += 1
}
print(-(quickSortDate.timeIntervalSinceNow/10))